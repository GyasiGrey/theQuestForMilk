/***************************************************************************
*                                                                          *
*                    V1RPG VergeC Library for Verge3                       *
*                        Copyright (C)2004 vecna                           *
*              Modified my Ness for all resolutions and more effects       *
*                                                                          *
***************************************************************************/

/********************************** data **********************************/

int crossfade_img = DuplicateImage(screen);
int alpha_img = DuplicateImage(screen);
int wipe_img = LoadImage("wipe2.gif");

/********************************** code **********************************/

/*******************************************
 *            Transition Effects           *
 *******************************************/


void FadeIn(int _dur)
{
	timer = 0;
	while (timer<_dur)
	{
		Render();
		SetLucent(timer*100/_dur);
		RectFill(0, 0, ImageWidth(screen), ImageHeight(screen), 0, screen);
		SetLucent(0);
		ShowPage();
	}
}

void FadeOut(int _dur)
{
	timer = 0;	
	while (timer<_dur)
	{
		Render();
		SetLucent(100 - (timer*100/_dur));
		RectFill(0, 0, ImageWidth(screen), ImageHeight(screen), 0, screen);
		SetLucent(0);	
		ShowPage();
	}
}

void WhiteIn(int _dur)
{
	timer = 0;
	while (timer<_dur)
	{
		Render();
		SetLucent(timer*100/_dur);
		RectFill(0, 0, ImageWidth(screen), ImageHeight(screen), RGB(255,255,255), screen);
		SetLucent(0);
		ShowPage();
	}
}

void WhiteOut(int _dur)
{
	timer = 0;	
	while (timer<_dur)
	{
		Render();
		SetLucent(100 - (timer*100/_dur));
		RectFill(0, 0, ImageWidth(screen), ImageHeight(screen), RGB(255,255,255), screen);
		SetLucent(0);	
		ShowPage();
	}
} 

void CrossFade(int _dur)
{
	timer = 0;
	while (timer<_dur)
	{
		Render();
		SetLucent(timer*100/_dur);
		Blit(0, 0, crossfade_img, screen);
		SetLucent(0);	
		ShowPage();
	}
}

void BoxOut(int _dur)
{
	timer = 0;
	int hd, vd;
	while (timer<_dur)
	{
		Render();
		hd=timer*(ImageWidth(screen)/2)/_dur;
		vd=timer*(ImageHeight(screen)/2)/_dur;
		RectFill(0,0,hd,ImageHeight(screen),0,screen);
		RectFill(ImageWidth(screen)-hd,0,ImageWidth(screen),ImageHeight(screen),0,screen);
		RectFill(0,0,ImageWidth(screen),vd,0,screen);
		RectFill(0,ImageHeight(screen)-vd,ImageWidth(screen),ImageHeight(screen),0,screen);
		ShowPage();
	}
}

void BoxIn(int _dur, int rend)
{
	timer = 0;
	int hd, vd;
	while (timer<_dur)
	{
		Render();
		hd=timer*(ImageWidth(screen)/2)/_dur;
		vd=timer*(ImageHeight(screen)/2)/_dur;
		hd = (ImageWidth(screen)/2)-hd;
		vd = (ImageHeight(screen)/2)-vd;
		RectFill(0,0,hd,ImageHeight(screen),0,screen);
		RectFill(ImageWidth(screen)-hd,0,ImageWidth(screen),ImageHeight(screen),0,screen);
		RectFill(0,0,ImageHeight(screen),vd,0,screen);
		RectFill(0,ImageWidth(screen)-vd,ImageHeight(screen),ImageWidth(screen)0,screen);
		ShowPage();
	}
}

void CircleOut(int dur)
{
	timer = 0;
	while (timer<dur)
	{
		Render();
		RectFill(0,0,320,240,0,crossfade_img);
		CircleFill(160, 120, 200-(timer*200/dur), 200-(timer*200/dur), transcolor, crossfade_img);
		TBlit(0, 0, crossfade_img, screen);
		ShowPage();
	}
}

void CircleIn(int dur)
{
	timer = 0;
	while (timer<dur)
	{
		Render();
		RectFill(0,0,320,240,0,crossfade_img);
		CircleFill(160, 120, timer*200/dur, timer*200/dur, transcolor, crossfade_img);
		TBlit(0, 0, crossfade_img, screen);
		ShowPage();
	}
}

void FadeInImgCenter(int _dur, int _img)
{
	timer = 0;
	while (timer<_dur)
	{
		Blit((ImageWidth(screen)/2) - (ImageWidth(_img)/2), (ImageHeight(screen)/2) - (ImageHeight(_img)/2), _img, screen);
		//Blit(0, 0, _img, screen);
		SetLucent(timer*100/_dur);
		RectFill(0, 0, ImageWidth(screen), ImageHeight(screen), 0, screen);
		SetLucent(0);
		ShowPage();
	}
}

void FadeInImg(int _dur, int _img)
{
	timer = 0;
	while (timer<_dur)
	{
		Blit(0, 0, _img, screen);
		SetLucent(timer*100/_dur);
		RectFill(0, 0, ImageWidth(screen), ImageHeight(screen), 0, screen);
		SetLucent(0);
		ShowPage();
	}
}

void FadeOutImg(int _dur)
{
	timer = 0;
	int _img = DuplicateImage(screen);
	while (timer<_dur)
	{
		Blit(0, 0, _img, screen);
		SetLucent(100 - (timer*100/_dur));
		RectFill(0, 0, ImageWidth(screen), ImageHeight(screen), 0, screen);
		SetLucent(0);	
		ShowPage();
	}
	FreeImage(_img);
}

void TransWipe(int _dur)
{
	RectFill(0, 0, ImageWidth(screen), ImageHeight(screen), RGB(255,255,255), alpha_img);

	timer = 0;
	int x;
	while (timer<_dur)
	{
		x = (timer*(ImageWidth(screen)+50)/_dur)-25;
		Blit(x, 0, wipe_img, alpha_img);
		RectFill(0-30, 0, x-1, ImageHeight(screen), 0, alpha_img);
		Render();
		AlphaBlit(0, 0, crossfade_img, alpha_img, screen);
		ShowPage();
	}
}

void WhiteInImg(int _dur, int _img)
{
	timer = 0;
	while (timer<_dur)
	{
		Blit(0, 0, _img, screen);
		SetLucent(timer*100/_dur);
		RectFill(0, 0, ImageWidth(screen), ImageHeight(screen), RGB(255,255,255), screen);
		SetLucent(0);
		ShowPage();
	}
}

void WhiteOutImg(int _dur)
{
	timer = 0;
	int _img = DuplicateImage(screen);
	while (timer<_dur)
	{
		Blit(0, 0, _img, screen);
		SetLucent(100 - (timer*100/_dur));
		RectFill(0, 0, ImageWidth(screen), ImageHeight(screen), RGB(255,255,255), screen);
		SetLucent(0);	
		ShowPage();
	}
	FreeImage(_img);
} 

void CrossFadeImg(int _dur, int _img)
{
	timer = 0;
	int _scr = DuplicateImage(screen);
	while (timer<_dur)
	{
		Blit(0, 0, _img, screen);
		SetLucent(timer*100/_dur);
		Blit(0, 0, _scr, screen);
		SetLucent(0);	
		ShowPage();
	}
	FreeImage(_scr);
}

void BattleTransition(int _dur)
{
	int zoom;

	int rot;
	int inc;
	int src = DuplicateImage(screen);
	
	timer=0;

	zoom=1000;
	rot=0;
	inc=0;

	while(timer<_dur)
	{
		//rotate and scale the image
		RotScale(ImageWidth(screen)/2, ImageHeight(screen)/2, rot, zoom, src, screen);

		SetLucent(100 - (timer*100/_dur));
		RectFill(0, 0, ImageWidth(screen), ImageHeight(screen), RGB(0,0,0), screen);
		SetLucent(0);
		
		ShowPage();
		//zoom in a bit
		zoom-=15;
		
		//set up so the rotational speed increases
		rot+=inc;
		inc++;
	}
	FreeImage(src);
}